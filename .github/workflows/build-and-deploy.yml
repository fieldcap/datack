name: Build and Upload

on:
  push:
    tags:
      - 'v*' # Runs when a tag like v1.2.3 is pushed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  id-token: write

jobs:
  deploy:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: "latest"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Extract version from tag
        id: get_version
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: Update React navbar version
        shell: pwsh
        run: |
          $utf8NoBomEncoding = New-Object System.Text.UTF8Encoding $False
          $version = "${{ steps.get_version.outputs.version }}"
          $navbar = "src/react/src/pages/settings/SettingsOverview.tsx"
          (Get-Content $navbar) -replace '<span id="version">.*?</span>', "<span id=`"version`">$version</span>" |
            Out-File -FilePath $navbar -Encoding utf8NoBOM

      - name: Build React app
        run: |
          cd src/react
          npm ci
          npm run build

      - name: Build .NET Web
        run: |
          cd src/dotnet/Datack.Web.Web
          dotnet publish Datack.Web.Web.csproj -c Release -o ../../../out/server -p:Version=${{ steps.get_version.outputs.version }}

      - name: Build .NET Agent
        run: |
          cd src/dotnet/Datack.Agent.Service
          dotnet publish Datack.Agent.csproj -c Release -o ../../../out/agent -p:Version=${{ steps.get_version.outputs.version }}

      - name: Zip outputs
        shell: pwsh
        run: |
          cd out
          Compress-Archive -Path (Get-ChildItem -Path server -Recurse) -DestinationPath ../Datack.Server.zip -Force
          Compress-Archive -Path (Get-ChildItem -Path agent -Recurse) -DestinationPath ../Datack.Agent.zip -Force

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ steps.get_version.outputs.version }}
          files: |
            Datack.Server.zip
            Datack.Agent.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
